# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven and PostgreSQL

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  DATASOURCE_URL: localhost:5432/testdb
  DATASOURCE_USERNAME: postgres
  DATASOURCE_PASSWORD: postgres
  SIGN_IN_KEY: IHGA37E2G89OVF9KUCW5PQDANQSRT6PKVKXRNAA8TSN3O7JWZPHRBXEBFKTFJ9V0

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 22
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'temurin'
          cache: maven

      - name: Set up PostgreSQL client
        run: sudo apt-get install -y postgresql-client

      - name: Create Test Database
        run: |
          run: |
            PGPASSWORD=postgres psql -h localhost -U postgres -c "DROP DATABASE IF EXISTS testdb;"
            PGPASSWORD=postgres psql -h localhost -U postgres -c "CREATE DATABASE testdb;"

      - name: Build with Maven
        run: mvn -B package --file pom.xml
